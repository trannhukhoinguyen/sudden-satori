---
import Layout from '../../layouts/Layout.astro';
import TableOfContents from '../../components/TableOfContents.astro';
import BackToTopWithTOC from '../../components/BackToTopWithTOC.astro';
import { extractHeadings, filterHeadingsForTOC } from '../../utils/table-of-contents';
import { calculateReadingTime, extractTextFromMarkdown } from '../../utils/reading-time';
import MediaArea from "../../components/MediaArea.astro";

export async function getStaticPaths() {
  const mdPostsGlob = import.meta.glob('../../content/zongjinglu/*.md', { eager: true });
  const mdxPostsGlob = import.meta.glob('../../content/zongjinglu/*.mdx', { eager: true });

  const allPosts = [...Object.values(mdPostsGlob), ...Object.values(mdxPostsGlob)] as any[];

  return allPosts.map((post: any) => {
    const rawContent = post.body || post.rawContent?.() || '';
    const plainText = extractTextFromMarkdown(rawContent);
    const readingTime = calculateReadingTime(plainText);
    const allHeadings = extractHeadings(rawContent);
    const tocHeadings = filterHeadingsForTOC(allHeadings);

    return {
      params: { slug: post.file.split('/').pop()?.replace(/\.(md|mdx)$/, '') },
      props: { post, readingTime, tocHeadings }
    };
  });
}

const { post, readingTime, tocHeadings } = Astro.props;
const { frontmatter, Content } = post as any;

const pageTitle = frontmatter.title;
const base = import.meta.env.BASE_URL;
const publishedTime = frontmatter.date ? new Date(frontmatter.date).toISOString() : undefined;
---

<Layout
  title={pageTitle}
  description={frontmatter.description || frontmatter.excerpt}
  type="article"
  publishedTime={publishedTime}
>
  <article class="blog-post">
    <header class="post-header">
      <h1 class="post-title">{frontmatter.title}</h1>

      <div class="post-meta">
        <time class="post-date" datetime={frontmatter.date}>
          {new Date(frontmatter.date).toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          })}
        </time>

        <span class="post-reading-time">{readingTime}</span>

        {frontmatter.categories && frontmatter.categories.length > 0 && (
          <div class="post-categories">
            {frontmatter.categories.map((category: string) => (
              <a href={`${base}/categories/${category.toLowerCase()}`} class="category-tag">
                {category}
              </a>
            ))}
          </div>
        )}
      </div>

      {frontmatter.excerpt && (
        <p class="post-excerpt">{frontmatter.excerpt}</p>
      )}

      <hr class="monumental-rule" />
    </header>

    <!-- Table of Contents -->
    <TableOfContents headings={tocHeadings} />

    <!-- Nút BackToTop & TOC -->
    <BackToTopWithTOC tocSelector=".table-of-contents" />

    <!-- Media Area -->
    <div class="post-content">
      <MediaArea entry={post} />
    </div>

    <!-- Content -->
    <div class="post-content">
      <Content />
    </div>

    <footer class="post-footer">
      {frontmatter.tags && frontmatter.tags.length > 0 && (
        <div class="post-tags">
          <span class="tags-label">Tags:</span>
          <div class="tag-list">
            {frontmatter.tags.map((tag: string) => (
              <span class="tag">{tag}</span>
            ))}
          </div>
        </div>
      )}

      <div class="post-navigation">
        <a href={`${base}/ZongjingLu`} class="back-to-blog">← Xem Tất cả ZongjingLu</a>
      </div>
    </footer>
  </article>
</Layout>
