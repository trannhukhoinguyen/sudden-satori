---
import type { Koan } from "@/types.ts";

const { koans, title } = Astro.props;

// Nhóm công án theo chữ cái đầu tiên
const grouped = koans.reduce((acc: Record<string, Koan[]>, k: any) => {
    const letter = k.title.charAt(0).toUpperCase();
    acc[letter] = acc[letter] || [];
    acc[letter].push(k);
    return acc;
}, {});

const letters = Object.keys(grouped).sort((a, b) =>
  a.localeCompare(b, "vi")
);
const initial = letters.includes("A") ? "A" : letters[0];
---

<h2 style="text-align: center">{title}</h2>
<div class="alphabet-container">
  <div class="alphabet">
    {letters.map(letter => (
      <button
        class:list={{ active: letter === initial }}
        data-letter={letter}
      >
        {letter}
      </button>
    ))}
  </div>

  <div class="koans">
    {letters.map(letter => (
      <ul data-group={letter} style={`display: ${letter === initial ? 'block' : 'none'};`}>
        {(grouped[letter] || []).map(k => (
          <li>{k.title}</li>
        ))}
      </ul>
    ))}
  </div>
</div>

<style>
    .alphabet-container {
        display: flex;
        gap: 1.5rem;
        align-items: flex-start;
        /* responsive: stack vertically on small screens */
        flex-wrap: wrap;
    }

    /* Left column: vertical buttons */
    .alphabet {
        display: flex;
        flex-direction: column; /* dọc */
        gap: 0.6rem;
        min-width: 64px;
    }

    /* Gold linear gradient button */
    .alphabet-btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 64px;
        height: 40px;
        padding: 0.4rem 0.6rem;
        border-radius: 10px;
        border: 1px solid rgba(0, 0, 0, 0.08);
        background: linear-gradient(180deg, #fff4c2 0%, #ffd24d 45%, #e6a800 100%);
        box-shadow: 0 6px 14px rgba(230, 160, 0, 0.12), inset 0 -2px 0 rgba(0,0,0,0.04);
        font-weight: 700;
        color: #412f00;
        cursor: pointer;
        transition: transform 160ms ease, box-shadow 160ms ease, filter 160ms ease;
        outline: none;
        border-left: 4px solid transparent;
    }

    .alphabet-btn:hover {
        transform: translateY(-2px);
        filter: brightness(1.03);
        box-shadow: 0 10px 20px rgba(230, 160, 0, 0.14), inset 0 -2px 0 rgba(0,0,0,0.06);
    }

    .alphabet-btn:active {
        transform: translateY(0);
        box-shadow: 0 6px 12px rgba(0,0,0,0.08), inset 0 -2px 0 rgba(0,0,0,0.06);
    }

    /* Active state more contrasted */
    .alphabet-btn.active {
        background: linear-gradient(180deg, #fff6d6 0%, #ffd24d 40%, #cc9600 100%);
        color: #1b1200;
        border-left-color: #c48f00;
        box-shadow: 0 12px 28px rgba(196, 143, 0, 0.18);
        transform: translateY(-3px);
    }

    /* Make buttons keyboard-friendly focus style */
    .alphabet-btn:focus {
        box-shadow: 0 0 0 4px rgba(228, 182, 60, 0.18);
    }

    /* Right column: koans list */
    .koans {
        flex: 1 1 300px;
        min-width: 220px;
    }

    .koans ul {
        margin: 0;
        padding-left: 1.1rem;
    }

    .koans li {
        margin: 0.25rem 0;
        line-height: 1.45;
    }

    /* Small screen: buttons on top row (wrap) */
    @media (max-width: 640px) {
        .alphabet-container {
            flex-direction: column;
            gap: 1rem;
        }
        .alphabet {
            flex-direction: row;
            flex-wrap: wrap;
            gap: 0.5rem;
        }
        .alphabet-btn {
            width: 48px;
            height: 36px;
            border-radius: 8px;
        }
    }
</style>

<script>
    const buttons = document.querySelectorAll<HTMLButtonElement>(".alphabet button");
    const groups = document.querySelectorAll<HTMLElement>(".koans ul");

    buttons.forEach((btn) => {
        btn.addEventListener("click", () => {
            const letter = btn.dataset.letter;

            groups.forEach((el) => {
                el.style.display = el.dataset.group === letter ? "block" : "none";
            });

            buttons.forEach((b) => {
                b.classList.remove("active");
                b.setAttribute("aria-pressed", "false");
            });

            btn.classList.add("active");
            btn.setAttribute("aria-pressed", "true");
            // optional: focus for keyboard users
            btn.focus();
        });
    });
</script>
