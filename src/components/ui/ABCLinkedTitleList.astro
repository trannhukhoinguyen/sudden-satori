---
import type { PostTitleWithSlug } from "@/types.ts";
import Search from "../page/Search.astro";
import ThemeSwitcher from "./ThemeSwitcher.astro";
import SearchMobile from "../page/SearchMobile.astro";

const { posts, listTitle } = Astro.props;

// Nhóm công án theo chữ cái đầu tiên
const grouped = posts.reduce((acc: Record<string, PostTitleWithSlug[]>, k: any) => {
    const letter = k.title.charAt(0).toUpperCase();
    acc[letter] = acc[letter] || [];
    acc[letter].push(k);
    return acc;
}, {});

const letters = Object.keys(grouped).sort((a, b) =>
  a.localeCompare(b, "vi")
);
const initial = letters.includes("A") ? "A" : letters[0];
---

<h2 style="text-align: center">
  {listTitle}
  <Search />
</h2>

<div class="alphabet-container">
  <div class="alphabet">
    {letters.map(letter => (
      <button
        class:list={{ active: letter === initial }}
        data-letter={letter}
      >
        {letter}
      </button>
    ))}
  </div>

  <div class="koans">
    {letters.map(letter => (
      <ul data-group={letter} style={`display: ${letter === initial ? 'block' : 'none'};`}>
        {(grouped[letter] || []).map((k: any) => (
            <li>
              <a href={`/koans/${k.slug}`} class="koan-path" target="_blank">
                {k.title?.toUpperCase()}
              </a>
          </li>
        ))}
      </ul>
    ))}
  </div>
</div>

<style>
    .alphabet-container {
      display: flex;
      gap: 1.5rem;
      align-items: flex-start;
      /* responsive: stack vertically on small screens */
      flex-wrap: wrap;
    }

    /* Left column: vertical buttons */
    .alphabet {
      display: flex;
      flex-direction: column; /* dọc */
      gap: 0.6rem;
      min-width: 64px;
    }

    /* Gold linear gradient button */
    .alphabet-btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      min-width: 100px;
      height: 40px;
      padding: 0.4rem 0.6rem;
      border-radius: 10px;
      border: 1px solid rgba(0, 0, 0, 0.08);
      background: linear-gradient(180deg, #fff4c2 0%, #ffd24d 45%, #e6a800 100%);
      box-shadow: 0 6px 14px rgba(230, 160, 0, 0.12), inset 0 -2px 0 rgba(0,0,0,0.04);
      font-weight: 700;
      color: #412f00;
      cursor: pointer;
      transition: transform 160ms ease, box-shadow 160ms ease, filter 160ms ease;
      outline: none;
      border-left: 4px solid transparent;
    }

    .alphabet-btn:hover {
      transform: translateY(-2px);
      filter: brightness(1.03);
      box-shadow: 0 10px 20px rgba(230, 160, 0, 0.14), inset 0 -2px 0 rgba(0,0,0,0.06);
    }

    .alphabet-btn:active {
      transform: translateY(0);
      box-shadow: 0 6px 12px rgba(0,0,0,0.08), inset 0 -2px 0 rgba(0,0,0,0.06);
    }

    /* Active state more contrasted */
    .alphabet-btn.active {
      background: linear-gradient(180deg, #fff6d6 0%, #ffd24d 40%, #cc9600 100%);
      color: #1b1200;
      border-left-color: #c48f00;
      box-shadow: 0 12px 28px rgba(196, 143, 0, 0.18);
      transform: translateY(-3px);
    }

    /* Make buttons keyboard-friendly focus style */
    .alphabet-btn:focus {
      box-shadow: 0 0 0 4px rgba(228, 182, 60, 0.18);
    }

    /* Right column: koans list */
    .koans {
      flex: 1 1 300px;
    }

    //
    .koans h1 {
      margin-top: 2rem;
      font-family: 'Norican', cursive;
      color: saddlebrown;
      position: relative;
      display: flex;
      align-items: center;
      font-size: 4rem;

      &::before,
      &::after {
        content: '';
        display: block;
        width: 1rem;
        height: 2px;
        background-color: currentColor;
        margin: 0 1rem;
      }
    }

    .koans ul:not(ul ul) {
      padding: 1rem 1rem 2rem 1rem;
      display: grid;
      grid-template-columns: max-content;
      z-index: 1;
      position: relative;
      perspective: 50vw;
      transform-style: preserve-3d;

      .same {
        color: var(linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab));
      }

      > li {
        --levitate: 0;
        position: relative;
        transform-style: preserve-3d;
        cursor: pointer;
        transition: transform 0.3s;

        &::after {
          content: '';
          pointer-events: none;
          display: block;
          position: absolute;
          width: 100%;
          height: 100%;
          left: 0;
          top: 0;
          opacity: 0;
          transition: opacity 0.3s;
          z-index: 1;
          mix-blend-mode: overlay;
          background-image: linear-gradient(to left, #ffe4b2, #c8b188);
        }

        &:hover {
          --levitate: 1;
          &::before {
            transform: translate3d(6rem, 1rem, -1px) scale(calc(1 - var(--levitate) * 0.1)) rotate(1.5deg);
            filter: blur(8px);
          }

          &::after {
            opacity: 0.6;
          }
        }

        ul {
          margin-top: 0.5em;
          margin-left: 1em;
          font-size: 0.8em;

          li {
            z-index: 1;
            &:first-letter {
              font-size: 1.4em;
            }
          }
        }

        &::before {
          content: '';
          display: block;
          position: absolute;
          width: 100%;
          left: 0;
          top: 0;
          transition: all 0.3s;
          height: calc(100% - 2px);
          //background-color: rgba(0, 0, 0, 0.4);
          z-index: -1;
          transform-origin: bottom left;
          transform: translate3d(8px, 2px, -1px) rotate(1deg);
          filter: blur(2px);
        }
      }
    }

    .koans {
        .koan-path {
            color: var(--color-accent-brown-dark);
        }

        ul {
            list-style-position: inside;
            width: 600px;
            max-width: 100%;
            background: white;
            box-shadow: 0.25rem 0.25rem 0.75rem rgb(0 0 0 / 0.15);
            padding: 0;
            margin: 0;
            border-radius: 0.1rem;
        }

        li {
            padding: 0 0 0 1rem;
        }

        li:not(:last-child) {
            border-bottom: 1px solid lightblue;
        }

        li:first-child {
            margin-top: 1rem;
        }

        li:last-child {
            margin-bottom: 1rem;
        }

        ::marker {
            content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' width='14' viewBox='0 0 50 50'%3E%3Cpath d='M46.4 16.2c-2.3-2.3-5.4-3.5-8.4-4.5-.5-.2-1.1-.3-1.6-.5-1.6-1.6-3.7-2.8-6.2-3.2-1-.2-1.9.1-2.5.6-.9-.3-1.8-.6-2.7-.8-3.2-1-6.4-1.8-9.5-.1-1 .5-1.9 1.2-2.7 2-6.4 1.4-11.7 5-12.4 12.7C0 27 1.9 31.5 4.9 34.9c.1.6.2 1.1.4 1.7 1 3.2 3.3 5.7 6.7 6.5 2.7.6 5.4-.2 7.9-1.2 3.3.4 6.7.3 9.9 0 6.5-.7 13.3-2.8 17.1-8.5 3.6-5.2 4-12.6-.5-17.2zm-17.3.9c2.1.4 4 1.7 4.7 3.8 0 .5-.1 1.1-.2 1.6-.3 1.4-.8 2.6-1.6 3.7-.7.2-1.5.1-2.3-.4-.8-.4-1.6-1-2.2-1.6-.4-.4-1.2-1.7-1.6-1.9 3.4 1.3 5.1-3 3.2-5.2zm-11.6 9.7c.2-1.9 1.1-3.9 2.3-5.5-.4 2.1.3 4.2 1.7 6 1.3 1.7 3.1 3.2 5 4.2-.2.1-.4.2-.6.4-.1 0-.1.1-.2.1-3.9.2-8.7-.8-8.2-5.2zm-6.4 3.1c.1.3.1.7.2 1 .2.6.4 1.2.7 1.8-.4-.2-.7-.5-1-.7.1-.8.1-1.4.1-2.1zm31.2-1.3c-.9 1.7-2.1 3.1-3.7 4.1 2-2.1 3.4-4.7 4-7.6.2-.7.3-1.4.3-2.1.6 1.5.5 3.3-.6 5.6z'/%3E%3C/svg%3E") ' ';
        }

        li:nth-child(3n)::marker {
            content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' width='14' viewBox='0 0 50 50'%3E%3Cpath d='M46.5 12.5c-.4-1.1-1.3-1.8-2.2-2-4.2-4-11.6-4.3-17.1-4.1-6.9.3-13.9 2.1-19.4 6.5C2 17.5-2.4 25.7 2.5 32.6c2.2 3.2 5.5 4.9 9 5.5 3.3 1.7 6.7 3.3 10.2 4.4 7.8 2.3 17 1.6 23.2-4.3 7.3-7 4.8-17.3 1.6-25.7zm-20.2 2.7c.6 0 1.3 0 1.8.2 1.1.4 1.7 1.3 2 2.3-1-1.2-2.4-2.1-3.8-2.5zm-1.4 6.6c.9.9 1.3 2.2-.2 2.3-2 .2-1.1-1.9.2-2.3zm-11.8 9.8c-.6-.3-2.9-1.1-3.2-1.8-.2-.5 1.4-3.1 2.1-4.2.3.5.7 1 1.2 1.4 0 .3.1.6.2.8.5 1.9 1.5 3.1 2.9 4h-.2c-.8.1-1.6.1-2.5-.1-.2 0-.3 0-.5-.1zM24 36.4c1.6-.7 3-1.5 4.3-2.5.8.2 1.7.3 2.5.5 2.5.4 5.2.9 7.7.6-.9.6-2 1.1-3 1.4-3.9 1.3-7.7 1-11.5 0z'/%3E%3C/svg%3E") ' ';
        }

        li:nth-child(3n - 1)::marker {
            content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' width='14' viewBox='0 0 50 50'%3E%3Cpath d='M48.3 23.7c-1-9.9-9.9-15.6-18.8-17.8-8.2-2.1-18.8-2.6-24.6 4.8C.6 16.2 1 23.6 4.3 29.3c-.5 1-.8 2-1 3-.6 4 2 7.6 5.1 10 5.9 4.4 14 4.2 19.6-.4 1.5 0 2.9-.2 4.4-.5 1.8 0 3.5 0 5.3-.1 2.3-.1 3.5-1.9 3.5-3.7 4.5-3.3 7.7-8.2 7.1-13.9zM9.1 17.8c1.1-4.1 4.9-5.8 8.8-6.1.9-.1 1.9-.1 2.9-.1-3.2 1.6-6.3 4.6-8 7.4-.1.1-.1.2-.2.3-1.1.9-2.1 1.9-3 2.9-.2.2-.4.4-.5.6-.4-1.7-.5-3.3 0-5z'/%3E%3C/svg%3E") ' ';
        }
    }

    /* Small screen: buttons on top row (wrap) */
    @media (max-width: 640px) {
        .alphabet-container {
            flex-direction: column;
            gap: 1rem;
        }
        .alphabet {
            flex-direction: row;
            flex-wrap: wrap;
            gap: 0.5rem;
        }
        .koans {
            width: 100%;
        }
        .alphabet-btn {
            width: 48px;
            height: 36px;
            border-radius: 8px;
        }
    }
</style>

<script>
    const buttons = document.querySelectorAll<HTMLButtonElement>(".alphabet button");
    const groups = document.querySelectorAll<HTMLElement>(".koans ul");

    buttons.forEach((btn) => {
        btn.addEventListener("click", () => {
            const letter = btn.dataset.letter;

            groups.forEach((el) => {
                el.style.display = el.dataset.group === letter ? "block" : "none";
            });

            buttons.forEach((b) => {
                b.classList.remove("active");
                b.setAttribute("aria-pressed", "false");
            });

            btn.classList.add("active");
            btn.setAttribute("aria-pressed", "true");
            // optional: focus for keyboard users
            btn.focus();
        });
    });
</script>
